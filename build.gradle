buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.7.+'
    }
}
apply plugin: 'android'

repositories {
    mavenCentral()
}

configurations {
    beaver; jflex
}

dependencies {
    // Pour dépendances embarquées dans repository,
    // si introuvable dans le repo maven central
    // compile fileTree(dir: 'libs', include: '*.jar')

    // dépendances maven (par défaut avec dépendances transitives)
    compile 'de.jflex:jflex:1.4.3'
    compile 'net.sf.beaver:beaver-rt:0.9.11'
    //compile 'net.sf.beaver:beaver-cc:0.9.11'
    //compile 'net.sf.beaver:beaver-ant:0.9.11'

    compile 'com.google.guava:guava:15.0'
    compile('org.jscience:jscience:4.3.1') {
        transitive = false
    }
    compile 'de.congrace:exp4j:0.3.11'
    compile 'org.beanshell:bsh:2.0b5'

    compile "com.j256.ormlite:ormlite-android:4.48"

    beaver group: 'net.sf.beaver', name: 'beaver-ant', version: '0.9.11'
    jflex group: 'de.jflex', name: 'jflex', version: '1.4.3'

    // Google Play Services
    // compile 'com.google.android.gms:play-services:4.0.30'

    // Support Libraries
    //   compile 'com.android.support:support-v4:19.0.0'
    //  compile 'com.android.support:appcompat-v7:19.0.0'
    //  compile 'com.android.support:gridlayout-v7:19.0.0'
    //  compile 'com.android.support:support-v7-mediarouter:19.0.0'
    //  compile 'com.android.support:support-v13:19.0.0'

    // Note: these libraries require the "Google Repository" and "Android Repository"
    //       to be installed via the SDK manager.
}

android {
    compileSdkVersion 16
    buildToolsVersion "19.0.0"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 16
        versionCode 1
        versionName "1.0"
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')

        buildTypes {
            release {
                runProguard false
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            }
        }
    }

    // Taches ant pour la reconstruction du parser

    task jflex << {
        ant.taskdef(name: 'flextask', classname: 'JFlex.anttask.JFlexTask', classpath: configurations.jflex.asPath)
        ant.flextask(file: 'src/fr/softwaresemantics/howmanydroid/model/ast/parser/generated/expr.flex',
                    outdir: 'src/fr/softwaresemantics/howmanydroid/model/ast/parser/generated',
                    nobak: 'yes',
                    verbose: 'yes',
                    generateDot: 'yes',
                    time: 'yes')
    }

    task beaver << {
        ant.taskdef(name: 'beavertask', classname: 'beaver.comp.run.AntTask', classpath: configurations.beaver.asPath)
        ant.beavertask(file: 'src/fr/softwaresemantics/howmanydroid/model/ast/parser/generated/expr.grammar',
                destdir: 'src/',
                compress: 'yes',
                exportTables: 'no',
                sortTerminals: 'no',
                terminalNames: 'no',
                exportTerminals: 'no',
                useSwitch: 'no',
                anonymousActions: 'yes',
                reportActions: 'no')
    }


}